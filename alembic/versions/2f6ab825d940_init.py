"""init

Revision ID: 2f6ab825d940
Revises:
Create Date: 2025-04-04 00:48:10.853830

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from app.utils.serializers import JSONSerializable
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "2f6ab825d940"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "categories",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("index", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=150), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("image", JSONSerializable, nullable=True),
        sa.Column("externalCode", sa.String(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("AVAILABLE", "UNAVAILABLE", name="status"),
            nullable=False,
        ),
        sa.Column(
            "availabilityId", postgresql.ARRAY(sa.UUID()), nullable=True
        ),
        sa.Column("itemOfferId", postgresql.ARRAY(sa.UUID()), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("externalCode"),
    )
    op.create_table(
        "items",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=150), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("externalCode", sa.String(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("AVAILABLE", "UNAVAILABLE", name="itemstatus"),
            nullable=False,
        ),
        sa.Column("image", JSONSerializable, nullable=True),
        sa.Column("images", JSONSerializable, nullable=True),
        sa.Column("nutritionalInfo", JSONSerializable, nullable=True),
        sa.Column("serving", sa.Integer(), nullable=True),
        sa.Column(
            "unit",
            sa.Enum("UN", "KG", "L", "OZ", "LB", "GAL", name="unittype"),
            nullable=False,
        ),
        sa.Column("ean", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("externalCode"),
    )
    op.create_table(
        "menus",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=500), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("externalCode", sa.String(), nullable=False),
        sa.Column("disclaimer", sa.String(), nullable=True),
        sa.Column("disclaimerURL", JSONSerializable, nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("externalCode"),
    )
    op.create_table(
        "orders",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("display_id", sa.String(), nullable=False),
        sa.Column(
            "type", sa.Enum("DELIVERY", name="ordertype"), nullable=False
        ),
        sa.Column(
            "status",
            sa.Enum(
                "CREATED",
                "CONFIRMED",
                "DISPATCHED",
                "DELIVERED",
                "CANCELLED",
                name="orderstatus",
            ),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("total_amount", sa.Float(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "item_offers",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("itemId", sa.UUID(), nullable=False),
        sa.Column("index", sa.Integer(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("AVAILABLE", "UNAVAILABLE", name="offerstatus"),
            nullable=False,
        ),
        sa.Column("price", JSONSerializable, nullable=False),
        sa.Column(
            "availabilityId", postgresql.ARRAY(sa.UUID()), nullable=True
        ),
        sa.Column(
            "optionGroupsId", postgresql.ARRAY(sa.UUID()), nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["itemId"],
            ["items.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "menu_category",
        sa.Column("menu_id", sa.UUID(), nullable=False),
        sa.Column("category_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["categories.id"],
        ),
        sa.ForeignKeyConstraint(
            ["menu_id"],
            ["menus.id"],
        ),
        sa.PrimaryKeyConstraint("menu_id", "category_id"),
    )
    op.create_table(
        "order_customers",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("order_id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("phone", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["order_id"],
            ["orders.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "order_deliveries",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("order_id", sa.UUID(), nullable=False),
        sa.Column("address", JSONSerializable, nullable=False),
        sa.Column("estimated_time", sa.DateTime(), nullable=True),
        sa.Column("delivered_time", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["order_id"],
            ["orders.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "order_items",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("order_id", sa.UUID(), nullable=False),
        sa.Column("item_id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.Column("unit_price", sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(
            ["order_id"],
            ["orders.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("order_items")
    op.drop_table("order_deliveries")
    op.drop_table("order_customers")
    op.drop_table("menu_category")
    op.drop_table("item_offers")
    op.drop_table("orders")
    op.drop_table("menus")
    op.drop_table("items")
    op.drop_table("categories")
    # ### end Alembic commands ###
